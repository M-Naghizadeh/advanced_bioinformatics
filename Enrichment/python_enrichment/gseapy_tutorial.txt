
   #[1]RSS: 40 latest updates [2]RSS: 40 newest packages [3]RSS: latest
   releases for gseapy [4]PyPI

   [5]Skip to main content (BUTTON) Switch to mobile version

   Python Software Foundation 20th Year Anniversary Fundraiser  [6]Donate
   today!
   Warning Some features may not work without JavaScript. Please try
   enabling it if you encounter problems.

   [7]PyPI
   Search PyPI ____________________ (BUTTON) Search

     * [8]Help
     * [9]Sponsors
     * [10]Log in
     * [11]Register

   (BUTTON) Menu
     * [12]Help
     * [13]Sponsors
     * [14]Log in
     * [15]Register

   Search PyPI ____________________ (BUTTON) Search

gseapy 0.10.4

   pip install gseapy (BUTTON) Copy PIP instructions
   [16]Latest version

   Released: Mar 5, 2021

   Gene Set Enrichment Analysis in Python

Navigation

     * [17]Project description
     * [18]Release history
     * [19]Download files

Project links

     * [20]Homepage
     * [21]Download

Statistics

   GitHub statistics:
     * Stars:
     * Forks:
     * Open issues/PRs:

   View statistics for this project via [22]Libraries.io, or by using
   [23]our public dataset on Google BigQuery

Meta

   License: MIT License (MIT)

   Author: [24]Zhuoqing Fang

   Tags Gene Ontology, GO, Biology, Enrichment, Bioinformatics,
   Computational Biology

Maintainers

   [25]Avatar for bioninja from gravatar.com bioninja

Classifiers

     * Development Status
          + [26]4 - Beta
     * Intended Audience
          + [27]Science/Research
     * License
          + [28]OSI Approved :: MIT License
     * Operating System
          + [29]MacOS :: MacOS X
          + [30]Microsoft :: Windows
          + [31]POSIX
     * Programming Language
          + [32]Python :: 3
     * Topic
          + [33]Scientific/Engineering :: Bio-Informatics
          + [34]Software Development :: Libraries

     * [35]Project description
     * [36]Project details
     * [37]Release history
     * [38]Download files

Project description

GSEApy: Gene Set Enrichment Analysis in Python.

   [39]https://badge.fury.io/py/gseapy.svg
   [40]https://img.shields.io/conda/vn/bioconda/GSEApy.svg?style=plastic
   [41]Action Status
   [42]https://travis-ci.org/zqfang/GSEApy.svg?branch=master
   [43]Documentation Status
   [44]https://img.shields.io/badge/license-MIT-blue.svg PyPI - Python
   Version [45]https://zenodo.org/badge/DOI/10.5281/zenodo.3748085.svg

   For examples of using GSEApy please click here: [46]Example

   Release notes : [47]https://github.com/zqfang/GSEApy/releases

   FAQ: [48]wiki

GSEApy is a python implementation for GSEA and wrapper for Enrichr.

   GSEApy can be used for RNA-seq, ChIP-seq, Microarray data. It can be
   used for convenient GO enrichment and to produce publication quality
   figures in python.

   GSEApy has six sub-commands available: gsea, prerank, ssgsea, replot
   enrichr, biomart.
   gsea: The gsea module produces [49]GSEA results. The input requries a
   txt file(FPKM, Expected Counts, TPM, et.al), a cls file, and gene_sets
   file in gmt format.
   prerank: The prerank module produces Prerank tool results. The input
   expects a pre-ranked gene list dataset with correlation values,
   provided in .rnk format, and gene_sets file in gmt format. prerank
   module is an API to GSEA pre-rank tools.
   ssgsea: The ssgsea module performs single sample GSEA(ssGSEA) analysis.
   The input expects a pd.Series (indexed by gene name), or a pd.DataFrame
   (include GCT file) with expression values and a GMT file. For multiple
   sample input, ssGSEA reconigzes gct format, too. ssGSEA enrichment
   score for the gene set is described by [50]D. Barbie et al 2009.
   replot: The replot module reproduce GSEA desktop version results. The
   only input for GSEApy is the location to GSEA Desktop output results.
   enrichr: The enrichr module enable you perform gene set enrichment
   analysis using Enrichr API. Enrichr is open source and freely available
   online at: [51]http://amp.pharm.mssm.edu/Enrichr . It runs very fast.
   biomart: The biomart module helps you convert gene ids using BioMart
   API.

   Please use ‘gseapy COMMAND -h’ to see the detail description for each
   option of each module.

   The full GSEA is far too extensive to describe here; see [52]GSEA
   documentation for more information. All files’ formats for GSEApy are
   identical to GSEA desktop version.

   If you use gseapy in your research, you should cite the original
   ``GSEA`` and ``Enrichr`` paper.

Why GSEApy

   I would like to use Pandas to explore my data, but I did not find a
   convenient tool to do gene set enrichment analysis in python. So, here
   are my reasons:
     * Ability to run inside python interactive console without having to
       switch to R!!!
     * User friendly for both wet and dry lab users.
     * Produce or reproduce publishable figures.
     * Perform batch jobs easy.
     * Easy to use in bash shell or your data analysis workflow, e.g.
       snakemake.

GSEApy Prerank module output

   Using the same data from GSEA, GSEApy reproduce the example above.

   Using Prerank or replot module will reproduce the same figure for GSEA
   Java desktop outputs
   docs/gseapy_OCT4_KD.png

   Generated by GSEApy

   GSEApt figures are supported by all matplotlib figure formats.

   You can modify GSEA plots easily in .pdf files. Please Enjoy.

Installation

   Install gseapy package from bioconda or pypi.
# if you have conda
$ conda install -c conda-forge -c bioconda gseapy

# or use pip to install the latest release
$ pip install gseapy

   You may instead want to use the development version from Github, by
   running
$ pip install git+git://github.com/zqfang/gseapy.git#egg=gseapy

Dependency

     * Python 3.5+

Mandatory

     * Numpy >= 1.13.0
     * Scipy
     * Pandas
     * Matplotlib
     * Requests (for Enrichr API)
     * Bioservices (for BioMart API)

Run GSEApy

Before you start:

   Unless you know exactly how GSEA works, you should convert all gene
   symbol names to uppercase first.

For command line usage:

# An example to reproduce figures using replot module.
$ gseapy replot -i ./Gsea.reports -o test


# An example to run GSEA using gseapy gsea module
$ gseapy gsea -d exptable.txt -c test.cls -g gene_sets.gmt -o test

# An example to run Prerank using gseapy prerank module
$ gseapy prerank -r gsea_data.rnk -g gene_sets.gmt -o test

# An example to run ssGSEA using gseapy ssgsea module
$ gseapy ssgsea -d expression.txt -g gene_sets.gmt -o test

# An example to use enrichr api
# see details of -g below, -d  is optional
$ gseapy enrichr -i gene_list.txt -g KEGG_2016 -d pathway_enrichment -o test

Run gseapy inside python console:

    1. Prepare expression.txt, gene_sets.gmt and test.cls required by
       GSEA, you could do this

import gseapy

# run GSEA.
gseapy.gsea(data='expression.txt', gene_sets='gene_sets.gmt', cls='test.cls', ou
tdir='test')

# run prerank
gseapy.prerank(rnk='gsea_data.rnk', gene_sets='gene_sets.gmt', outdir='test')

# run ssGSEA
gseapy.ssgsea(data="expression.txt", gene_sets= "gene_sets.gmt", outdir='test')


# An example to reproduce figures using replot module.
gseapy.replot(indir='./Gsea.reports', outdir='test')

    1. If you prefer to use Dataframe, dict, list in interactive python
       console, you could do this.

   see detail here: [53]Example
# assign dataframe, and use enrichr library data set 'KEGG_2016'
expression_dataframe = pd.DataFrame()

sample_name = ['A','A','A','B','B','B'] # always only two group,any names you li
ke

# assign gene_sets parameter with enrichr library name or gmt file on your local
 computer.
gseapy.gsea(data=expression_dataframe, gene_sets='KEGG_2016', cls= sample_names,
 outdir='test')

# using prerank tool
gene_ranked_dataframe = pd.DataFrame()
gseapy.prerank(rnk=gene_ranked_dataframe, gene_sets='KEGG_2016', outdir='test')

# using ssGSEA
gseapy.ssgsea(data=ssGSEA_dataframe, gene_sets='KEGG_2016', outdir='test')

    1. For enrichr , you could assign a list, pd.Series, pd.DataFrame
       object, or a txt file (should be one gene name per row.)

# assign a list object to enrichr
gl = ['SCARA3', 'LOC100044683', 'CMBL', 'CLIC6', 'IL13RA1', 'TACSTD2', 'DKKL1',
'CSF1',
     'SYNPO2L', 'TINAGL1', 'PTX3', 'BGN', 'HERC1', 'EFNA1', 'CIB2', 'PMP22', 'TM
EM173']

gseapy.enrichr(gene_list=gl, description='pathway', gene_sets='KEGG_2016', outdi
r='test')

# or a txt file path.
gseapy.enrichr(gene_list='gene_list.txt', description='pathway', gene_sets='KEGG
_2016',
               outdir='test', cutoff=0.05, format='png' )

GSEApy supported gene set libaries :

   To see the full list of gseapy supported gene set libraries, please
   click here: [54]Library

   Or use get_library_name function inside python console.
 #see full list of latest enrichr library names, which will pass to -g parameter
:
 names = gseapy.get_library_name()

 # show top 20 entries.
 print(names[:20])


['Genome_Browser_PWMs',
'TRANSFAC_and_JASPAR_PWMs',
'ChEA_2013',
'Drug_Perturbations_from_GEO_2014',
'ENCODE_TF_ChIP-seq_2014',
'BioCarta_2013',
'Reactome_2013',
'WikiPathways_2013',
'Disease_Signatures_from_GEO_up_2014',
'KEGG_2016',
'TF-LOF_Expression_from_GEO',
'TargetScan_microRNA',
'PPI_Hub_Proteins',
'GO_Molecular_Function_2015',
'GeneSigDB',
'Chromosome_Location',
'Human_Gene_Atlas',
'Mouse_Gene_Atlas',
'GO_Cellular_Component_2015',
'GO_Biological_Process_2015',
'Human_Phenotype_Ontology',]

Bug Report

   If you would like to report any bugs when use gseapy, don’t hesitate to
   create an issue on github here.

To get help of GSEApy

    1. See the wiki page: [55]https://github.com/zqfang/GSEApy/wiki/FAQ
    2. Visit the document site at [56]http://gseapy.rtfd.io/

Project details

Project links

     * [57]Homepage
     * [58]Download

Statistics

   GitHub statistics:
     * Stars:
     * Forks:
     * Open issues/PRs:

   View statistics for this project via [59]Libraries.io, or by using
   [60]our public dataset on Google BigQuery

Meta

   License: MIT License (MIT)

   Author: [61]Zhuoqing Fang

   Tags Gene Ontology, GO, Biology, Enrichment, Bioinformatics,
   Computational Biology

Maintainers

   [62]Avatar for bioninja from gravatar.com bioninja

Classifiers

     * Development Status
          + [63]4 - Beta
     * Intended Audience
          + [64]Science/Research
     * License
          + [65]OSI Approved :: MIT License
     * Operating System
          + [66]MacOS :: MacOS X
          + [67]Microsoft :: Windows
          + [68]POSIX
     * Programming Language
          + [69]Python :: 3
     * Topic
          + [70]Scientific/Engineering :: Bio-Informatics
          + [71]Software Development :: Libraries

Release history [72]Release notifications | [73]RSS feed

   This version
   [74]

   0.10.4

   Mar 5, 2021
   [75]

   0.10.3

   Feb 20, 2021
   [76]

   0.10.2

   Nov 12, 2020
   [77]

   0.10.1

   Aug 13, 2020
   [78]

   0.10.0

   Aug 11, 2020
   [79]

   0.9.19

   Jul 19, 2020
   [80]

   0.9.18

   Apr 22, 2020
   [81]

   0.9.17

   Feb 15, 2020
   [82]

   0.9.16

   Oct 9, 2019
   [83]

   0.9.15

   Aug 5, 2019
   [84]

   0.9.13

   Apr 10, 2019
   [85]

   0.9.12

   Mar 3, 2019
   [86]

   0.9.9

   Dec 5, 2018
   [87]

   0.9.8

   Oct 19, 2018
   [88]

   0.9.7

   Oct 19, 2018
   [89]

   0.9.5

   Sep 2, 2018
   [90]

   0.9.4

   Jul 5, 2018
   [91]

   0.9.3

   Jan 5, 2018
   [92]

   0.8.11

   Dec 1, 2017
   [93]

   0.7.10

   May 14, 2017

Download files

   Download the file for your platform. If you're not sure which to
   choose, learn more about [94]installing packages.

   CAPTION: Files for gseapy, version 0.10.4

   Filename, size File type Python version Upload date Hashes
   Filename, size [95]gseapy-0.10.4-py3-none-any.whl (525.3 kB) File type
   Wheel Python version py3 Upload date Mar 5, 2021 Hashes [96]View
   Filename, size [97]gseapy-0.10.4.tar.gz (4.4 MB) File type Source
   Python version None Upload date Mar 5, 2021 Hashes [98]View
   [99]Close

[100]Hashes for gseapy-0.10.4-py3-none-any.whl

   CAPTION: Hashes for gseapy-0.10.4-py3-none-any.whl

   Algorithm Hash digest
   SHA256 bbfbcbd9fafcaff12740e0661e5cce90b4145bf91b1dc60c72ab6ce0ec008834
   (BUTTON) Copy
   MD5 f1dcfb51992d4dbb8f9f0f039aec66ab (BUTTON) Copy
   BLAKE2-256
   edaf3ab4b7f2bd13f8a60ba8ac9873977aef2bc1f252c11488df4c57520d355c
   (BUTTON) Copy
   [101]Close
   [102]Close

[103]Hashes for gseapy-0.10.4.tar.gz

   CAPTION: Hashes for gseapy-0.10.4.tar.gz

   Algorithm Hash digest
   SHA256 6404b79a3b5dc07ed39f6a4f67b3c662df5bd8b0d50829c2819d8921a768dffb
   (BUTTON) Copy
   MD5 21979181fd194937a8c38e92242e350e (BUTTON) Copy
   BLAKE2-256
   2866686f37f09758667f38fff8dc10c811a8827771e4d5fc5c43d74b385b10e5
   (BUTTON) Copy
   [104]Close

Help

     * [105]Installing packages
     * [106]Uploading packages
     * [107]User guide
     * [108]FAQs

About PyPI

     * [109]PyPI on Twitter
     * [110]Infrastructure dashboard
     * [111]Package index name retention
     * [112]Our sponsors

Contributing to PyPI

     * [113]Bugs and feedback
     * [114]Contribute on GitHub
     * [115]Translate PyPI
     * [116]Development credits

Using PyPI

     * [117]Code of conduct
     * [118]Report security issue
     * [119]Privacy policy
     * [120]Terms of use
     __________________________________________________________________

   Status: [121]all systems operational

   Developed and maintained by the Python community, for the Python
   community.
   [122]Donate today!

   © 2021 [123]Python Software Foundation
   [124]Site map

   (BUTTON) Switch to desktop version

     * (en) English
     * (es) español
     * (fr) français
     * (ja) 日本語
     * (pt_BR) português (Brasil)
     * (uk) українська
     * (el) Ελληνικά
     * (de) Deutsch
     * (zh_Hans) 中文 (简体)
     * (ru) русский
     * (he) עברית
     * (eo) esperanto

   Supported by
   [125]AWS AWS Cloud computing [126]Datadog Datadog Monitoring
   [127]DigiCert DigiCert EV certificate [128]Facebook / Instagram
   Facebook / Instagram PSF Sponsor [129]Fastly Fastly CDN [130]Google
   Google Object Storage and Download Analytics [131]Microsoft Microsoft
   PSF Sponsor [132]Pingdom Pingdom Monitoring [133]Salesforce Salesforce
   PSF Sponsor [134]Sentry Sentry Error logging [135]StatusPage StatusPage
   Status page

References

   1. https://pypi.org/rss/updates.xml
   2. https://pypi.org/rss/packages.xml
   3. https://pypi.org/rss/project/gseapy/releases.xml
   4. https://pypi.org/opensearch.xml
   5. https://pypi.org/project/gseapy/#content
   6. https://psfmember.org/civicrm/contribute/transact?reset=1&id=33
   7. https://pypi.org/
   8. https://pypi.org/help/
   9. https://pypi.org/sponsors/
  10. https://pypi.org/account/login/
  11. https://pypi.org/account/register/
  12. https://pypi.org/help/
  13. https://pypi.org/sponsors/
  14. https://pypi.org/account/login/
  15. https://pypi.org/account/register/
  16. https://pypi.org/project/gseapy/
  17. https://pypi.org/project/gseapy/#description
  18. https://pypi.org/project/gseapy/#history
  19. https://pypi.org/project/gseapy/#files
  20. https://github.com/zqfang/gseapy
  21. https://github.com/zqfang/gseapy
  22. https://libraries.io/pypi/gseapy
  23. https://packaging.python.org/guides/analyzing-pypi-package-downloads/
  24. mailto:fzq518@gmail.com
  25. https://pypi.org/user/bioninja/
  26. https://pypi.org/search/?c=Development+Status+::+4+-+Beta
  27. https://pypi.org/search/?c=Intended+Audience+::+Science/Research
  28. https://pypi.org/search/?c=License+::+OSI+Approved+::+MIT+License
  29. https://pypi.org/search/?c=Operating+System+::+MacOS+::+MacOS+X
  30. https://pypi.org/search/?c=Operating+System+::+Microsoft+::+Windows
  31. https://pypi.org/search/?c=Operating+System+::+POSIX
  32. https://pypi.org/search/?c=Programming+Language+::+Python+::+3
  33. https://pypi.org/search/?c=Topic+::+Scientific/Engineering+::+Bio-Informatics
  34. https://pypi.org/search/?c=Topic+::+Software+Development+::+Libraries
  35. https://pypi.org/project/gseapy/#description
  36. https://pypi.org/project/gseapy/#data
  37. https://pypi.org/project/gseapy/#history
  38. https://pypi.org/project/gseapy/#files
  39. https://badge.fury.io/py/gseapy
  40. http://bioconda.github.io/
  41. https://github.com/zqfang/GSEApy/actions
  42. https://travis-ci.org/zqfang/GSEApy
  43. http://gseapy.readthedocs.io/en/master/?badge=master
  44. https://img.shields.io/badge/license-MIT-blue.svg
  45. https://doi.org/10.5281/zenodo.3748085
  46. http://gseapy.readthedocs.io/en/master/gseapy_example.html
  47. https://github.com/zqfang/GSEApy/releases
  48. https://github.com/zqfang/GSEApy/wiki/FAQ
  49. http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Main_Page
  50. http://www.nature.com/nature/journal/v462/n7269/abs/nature08460.html
  51. http://amp.pharm.mssm.edu/Enrichr
  52. http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Main_Page
  53. http://gseapy.readthedocs.io/en/master/gseapy_example.html
  54. http://amp.pharm.mssm.edu/Enrichr/#stats
  55. https://github.com/zqfang/GSEApy/wiki/FAQ
  56. http://gseapy.rtfd.io/
  57. https://github.com/zqfang/gseapy
  58. https://github.com/zqfang/gseapy
  59. https://libraries.io/pypi/gseapy
  60. https://packaging.python.org/guides/analyzing-pypi-package-downloads/
  61. mailto:fzq518@gmail.com
  62. https://pypi.org/user/bioninja/
  63. https://pypi.org/search/?c=Development+Status+::+4+-+Beta
  64. https://pypi.org/search/?c=Intended+Audience+::+Science/Research
  65. https://pypi.org/search/?c=License+::+OSI+Approved+::+MIT+License
  66. https://pypi.org/search/?c=Operating+System+::+MacOS+::+MacOS+X
  67. https://pypi.org/search/?c=Operating+System+::+Microsoft+::+Windows
  68. https://pypi.org/search/?c=Operating+System+::+POSIX
  69. https://pypi.org/search/?c=Programming+Language+::+Python+::+3
  70. https://pypi.org/search/?c=Topic+::+Scientific/Engineering+::+Bio-Informatics
  71. https://pypi.org/search/?c=Topic+::+Software+Development+::+Libraries
  72. https://pypi.org/help/#project-release-notifications
  73. https://pypi.org/rss/project/gseapy/releases.xml
  74. https://pypi.org/project/gseapy/0.10.4/
  75. https://pypi.org/project/gseapy/0.10.3/
  76. https://pypi.org/project/gseapy/0.10.2/
  77. https://pypi.org/project/gseapy/0.10.1/
  78. https://pypi.org/project/gseapy/0.10.0/
  79. https://pypi.org/project/gseapy/0.9.19/
  80. https://pypi.org/project/gseapy/0.9.18/
  81. https://pypi.org/project/gseapy/0.9.17/
  82. https://pypi.org/project/gseapy/0.9.16/
  83. https://pypi.org/project/gseapy/0.9.15/
  84. https://pypi.org/project/gseapy/0.9.13/
  85. https://pypi.org/project/gseapy/0.9.12/
  86. https://pypi.org/project/gseapy/0.9.9/
  87. https://pypi.org/project/gseapy/0.9.8/
  88. https://pypi.org/project/gseapy/0.9.7/
  89. https://pypi.org/project/gseapy/0.9.5/
  90. https://pypi.org/project/gseapy/0.9.4/
  91. https://pypi.org/project/gseapy/0.9.3/
  92. https://pypi.org/project/gseapy/0.8.11/
  93. https://pypi.org/project/gseapy/0.7.10/
  94. https://packaging.python.org/installing/
  95. https://files.pythonhosted.org/packages/ed/af/3ab4b7f2bd13f8a60ba8ac9873977aef2bc1f252c11488df4c57520d355c/gseapy-0.10.4-py3-none-any.whl
  96. https://pypi.org/project/gseapy/#copy-hash-modal-fdc7def6-060f-41a7-8f37-16cb97262ba8
  97. https://files.pythonhosted.org/packages/28/66/686f37f09758667f38fff8dc10c811a8827771e4d5fc5c43d74b385b10e5/gseapy-0.10.4.tar.gz
  98. https://pypi.org/project/gseapy/#copy-hash-modal-794c78d7-719a-49bc-94af-2429d6323856
  99. https://pypi.org/project/gseapy/#modal-close
 100. https://pip.pypa.io/en/stable/reference/pip_install/#hash-checking-mode
 101. https://pypi.org/project/gseapy/#modal-close
 102. https://pypi.org/project/gseapy/#modal-close
 103. https://pip.pypa.io/en/stable/reference/pip_install/#hash-checking-mode
 104. https://pypi.org/project/gseapy/#modal-close
 105. https://packaging.python.org/installing/
 106. https://packaging.python.org/tutorials/packaging-projects/
 107. https://packaging.python.org/
 108. https://pypi.org/help/
 109. https://twitter.com/PyPI
 110. https://dtdg.co/pypi
 111. https://www.python.org/dev/peps/pep-0541/
 112. https://pypi.org/sponsors/
 113. https://pypi.org/help/#feedback
 114. https://github.com/pypa/warehouse
 115. https://hosted.weblate.org/projects/pypa/warehouse/
 116. https://github.com/pypa/warehouse/graphs/contributors
 117. https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md
 118. https://pypi.org/security/
 119. https://www.python.org/privacy/
 120. https://pypi.org/policy/terms-of-use/
 121. https://status.python.org/
 122. https://donate.pypi.org/
 123. https://www.python.org/psf/
 124. https://pypi.org/sitemap/
 125. https://aws.amazon.com/
 126. https://www.datadoghq.com/
 127. https://www.digicert.com/
 128. https://research.fb.com/
 129. https://www.fastly.com/
 130. https://careers.google.com/
 131. https://azure.microsoft.com/en-us/develop/python/
 132. https://www.pingdom.com/
 133. https://opensource.salesforce.com/
 134. https://getsentry.com/for/python
 135. https://statuspage.io/
